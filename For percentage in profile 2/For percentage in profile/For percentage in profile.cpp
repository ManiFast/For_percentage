#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}#include <iostream>
#include <ctime>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");
	srand(time(NULL));

up:
	const int SIZE = 5;
	int arr[SIZE];
	int RValue;
	bool here;

	for (int i = 0; i < SIZE; ) // Заполняем массив рандомными числами которые неповторяются
	{
		here = false;
		RValue = rand() % 9 + 1; // 1-9 (исключает 0

		for (int j = 0; j < i; j++)
		{
			if (arr[j] == RValue)
			{
				here = true;
			}
		}

		if (here == false)
		{
			arr[i] = RValue;
			i++;
		}
	}

	//cout << sizeof(RValue);

	//for (int i = 0; i < SIZE; i++)		// Выводим эти числа
	//{
	//	cout << arr[i] << endl;
	//}

	//cout << endl;				// Разделитель
	const int SIZE1 = SIZE;	//4    Присвоение константы темже значением что и в старой константе
	int dots[SIZE1];			// Новый массив с темже размером (5)

	for (int i = 0; i < SIZE1; i++)		// Заполнение массива "dots" нулями (необязательно
	{
		dots[i] = 0;
	}

	/*
	Если сравнивать числа между собою по одному то можно узнать какое число меньше.
	создадим const int SIZE = 4;
	Нап. возмем массив с разными числами arr[SIZE]{3,6,2,8]
	И возьмем еще один массив кототрый будет сщетчиком dots[4]{0,0,0,0} (можно его обнулить
	Создадим интовую переменную (потомучто мы ее изменим в дикремент (отнимем 1
	int size2 = SIZE;
	Теперь уменьшем на 1 (зачем это надо вернуться сюда после  строчки
	size--;
	В нашем массиве 4 числа это 3 6 2 8
	Берем 1первое число (под индексом 0) и сравниваем ее со 2вторым (под индексом 1)
	Берем первый массив с числом 3 "arr[0]"
	И берем второй массив (он пустой) "dots[0]"
	Теперь сравниваем в первом массиве первое число состальными, if (arr[0] < arr[1])
	Если 3 < 6 то во втором массиве "dots" увеличиваем первое число на 1 (инкремент "dots[0]++"
	1]															3]
	3 < 3 = нет | dots[0]	| 0									2 < 3 = да  | dots[2]++ | 1
	3 < 6 = да  | dots[0]++	| 1									2 < 6 = да  | dots[2]++ | 2
	3 < 2 = нет | dots[0]	| 1									2 < 2 = нет | dots[2]	| 2
	3 < 8 = да	| dots[0]++	| 2									2 < 8 = да  | dots[2]++ | 3
	получается dots[0] = 2										получается dots[2] = 3
	у тройки 2 заметки (тройка меньше двоих чисел				У двойки 3 заметки (двойка меньше троих чисел
	2]															4]
	6 < 3 = нет | dots[0]	| 0									8 < 3 = нет | dots[3] | 0
	6 < 6 = нет | dots[0]	| 0									8 < 6 = нет | dots[3] | 0
	6 < 2 = нет | dots[0]	| 0									8 < 2 = нет	| dots[3] | 0
	6 < 8 = да	| dots[0]++ | 1									8 < 8 = нет | dots[3] | 0
	получается dots[1] = 1										получается dots[3] = 2
	у шестерки 6 заметок (шестерка меньше шести числа			У восмерки нет заметок (восьмерка самая большая у нее нету заметок
	Получается =>	первый массив = arr[]{3,6,2,8}
			   =>   второй массив = dots[]{2,1,3,0}
	Теперь чтобы определить какой из этих чисел меньше нужно посмотреть на второй массив
	Наименьший является тот у кого во втором массиве наибольший элемент
	Если чесел 4 то наименьшей будет 3 а наибольший будет 0 (вот почему 4 элемент нулевой, он самый  большой
	Теперь остается сравнить каждый элемент с 3торойкой (если бы у нас было 5 элементов мы бы сравнивали с 4четверкой идт
	Нам понадобиться цикл
	цикл будет двигаться по четырем элементам и сравнивать их с 3
	for (int i = 0; i < 4; i++)
	{
		if (dots[i] == 4)
		{
			cout << arr[i] << endl;
		}
	}
	*/

	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			if (arr[i] < arr[j])
			{
				dots[i]++; // Ставит заметки
			}
		}
	}

	for (int i = 0; i < SIZE; i++)
	{
		cout << arr[i] << "\t" << dots[i] << endl;	// Выводит чисда и заметки
	}


	//for (int i = 0; i < SIZE1; i++)
	//{
	//	cout << dots[i] << endl; // Выводит все заметки
	//}

	cout << endl;	// Разделитель
	int size2 = SIZE1;	//4
	//size2 -= 1;
	size2--;	//3
	//int size3 = 1;	//1

	for (int i = 0; i < 5; i++)
	{
		if (dots[i] == size2) //4
		{
			cout << "Наменьшее число " << arr[i] << endl;	// Выводит наименьшее число
		}

		if (dots[i] == 0) //1
		{
			cout << "Наибольшее число " << arr[i] << endl;		// Выводит наибольшее число
		}
	}

	cout << endl << endl;

	// Ееее сделал (5 часов потрачено

	system("pause");
	goto up;
	return 0;
}